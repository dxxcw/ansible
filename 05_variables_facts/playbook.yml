---
########################################
# Play 01: .htaccess 파일 사용하는 웹서버 구축
# * (ㄱ) 패키지 설치
# * (ㄴ) 서비스 설정
#   - /etc/httpd/conf/httpd.conf(AllowOveride AuthConfig)
#   - /var/www/html/.htaccess
#   - /etc/httpd/secrets/htpasswd
#   - /var/www/html/index.html
# * (ㄷ) 서비스 기동
# * (ㄹ) 방화벽 등록
# Play 02: 웹 요청
########################################
- name: Play 01) 고급 웹 서버 구축
  hosts: ansible1.example.com
  vars_files:
    - vars/vars.yml
  tasks:
    ################################################
    # * (1) 웹 패키지 설치 - httpd, mod_ssl, firewalld (yum)
    # * (2) 웹 서비스 설정
    #   - /etc/httpd/conf/httpd.conf (AllowOveride AuthConfig) (copy)
    #   - /var/www/html/.htaccess (copy)
    #   - /etc/httpd/secrets 디렉토리 생성 (file)=> htpasswd (copy)
    #   - /var/www/html/index.html (facts) (copy)
    # * (3) 웹 서비스 기동 - httpd, firewalld (service)
    # * (4) 방화벽 등록 - http, https (firewalld)
    ################################################
    - name: (1) 웹 패키지 설치
      ansible.builtin.yum:
        name:
          - "{{ pkg_http }}"
          - "{{ pkg_https }}"
          - "{{ pkg_fw }}"
        state: present

    - name: (2) 웹 서비스 설정 - /etc/httpd/conf/httpd.conf
      ansible.builtin.copy:
        src: "files/{{ webconf }}"
        dest: "/etc/httpd/conf/{{ webconf }}"
        owner: root
        group: root
        mode: '0644'

    - name: (2) 웹 서비스 설정 - /var/www/html/.htaccess (copy)
      ansible.builtin.copy:
        src: "files/{{ htaccess }}"
        dest: "/var/www/html/{{ htaccess }}"
        owner: root
        group: root
        mode: '0644'

    - name: (2) 웹 서비스 설정 - /etc/httpd/secrets 디렉토리 생성 (file)
      ansible.builtin.file:
        path: "{{ secretdir }}"
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: (2) 웹 서비스 설정 - htpasswd 파일 생성
      ansible.builtin.copy:
        src: "files/{{ htpasswd }}"
        dest: "/etc/httpd/secrets/{{ htpasswd }}"
        owner: apache
        group: apache
        mode: '0400'

    - name: (2) 웹 서비스 설정 - /var/www/html/index.html
      ansible.builtin.copy:
        content: |
          <pre><h1>
          hostname: {{ ansible_hostname }}
          hostname: {{ ansible_fqdn }}
          hostname: {{ ansible_fqdn }}
          IP: {{ ansible_default_ipv4.address }}
          IP: {{ ansible_facts['default_ipv4']['address'] }}
          IP - {{ ansible_facts.default_ipv4.address }}
          </h1></pre>
        dest: /var/www/html/index.html
        mode: '0644'

    - name: (3) 웹 서비스 기동 - {{ svc_web }}, { svc_fw }}"
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop:
        - "{{ svc_web }}"
        - "{{ svc_fw }}"

    - name: (4) 방화벽 등록 - http, https
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled
      loop:
        - "80/tcp"
        - "443/tcp"

- name: Play 02) 웹 요청 및 확인
  hosts: localhost
  become: false
  gather_facts: false
  vars_files:
    - vars/secret.yml
  tasks:
    ##########################################
    # 웹 요청 (uri)
    #  - url: http://192.168.10.10/index.html
    #  - ID/PASS: guser/soldesk1.
    #    => vars/secret.yml
    #    => vault password: guser/soldesk1.
    #    => echo 'soldesk1.' > vault-pass && chmod 600 vault-pass
    #    => ansible-platbook playbook.yml --vault-password-file=
    ##########################################
    - name: (1) 웹 요청 확인
      ansible.builtin.uri:
        url: http://192.168.10.10/index.html
        validate_certs: false
        user: "{{ web_user }}"
        password: "{{ web_pass }}"
        force_basic_auth: true
        status_code: 200
      register: output

    - name: 웹 응답 확인
      ansible.builtin.debug: var=output

